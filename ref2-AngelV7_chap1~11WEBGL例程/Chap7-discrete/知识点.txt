一) 缓存
离散数据:缓存数据时离散的（即空间分辨率和深度分辨率都是有限的）
像素， 位平面， 深度，

离散数据最重要的用途之一就是（绘制表面-渲染着色），


计算中有三种类型内存，三者关系
CPU中的内存，附属于GPU的纹理内存，GPU的内存


二）数字图像
像素阵列， 灰度图像， 彩色图像
获取图像的三种方法：借助程序代码生成，借助数码设备获得，直接从数据中转换获得

！！！先介绍比较好（或者在“实现”部分就介绍以下概念）
采样，
走样，
反走样方法（滤波-线性滤波）


三）映射方法
物体表面渲染方法：几何对象表示，样条曲线曲面表示成网格后明暗着色
这里是顶点建模后用贴图映射的方法进行着色

映射方法有三种：纹理映射，反射（环境）映射，凹凸映射
映射方法的共同点：片元处理过程的一部分，都改变了单个片元的明暗值
映射方法的优点：降低了对象表示的几何复杂度，生成了复杂的几何对象
映射方法的缺点：受走样误差的影响。


四）纹理映射
纹理，涉及坐标系， 纹素，纹理坐标
映射方向：逆向-从屏幕空间到纹理空间，
映射粒度：区域-从像素到原像
映射函数：复杂-线性映射，两步映射
映射采样：两种-点采样，线性滤波

五）WEBGL的纹理映射
片元处理的一部分，纹理处理与法向量、颜色处理类似。
先作为状态与顶点关联，然后在多边形的表面上对顶点的纹理坐标进行插值计算，
从而得到多边形表面上其他位置的纹理坐标。

纹理映射实现的三个步骤：
首先，生成纹理图像并存储到GPU的纹理内存中（创建纹理对象，存储纹理并设置采样参数)
齐次，将纹理坐标作为顶点属性同对象表面顶点关联（将纹理坐标施加给每个片元）
最后，在片元着色器中用采样器进行纹理采样（将纹理颜色施加给每个片元）

采样器：sampler
只出现在片元着色器中，可通过它访问纹理对象及其参数。
采样器工作：返回输入纹理坐标的值或纹理图像的采样结果。
在APP代码中需要把创建的纹理对象和片元着色器中的采样器关联起来。

纹理映射的参数设置
1）gl.TEXTURE_WRAP_S,gl.TEXTURE_WRAP_T: 
当纹理坐标S,T的取值超过（0.0,1.0），
要么重复gl.REPEAT，要么截取gl.CLAMP_TO_EDGE。

2)采样方法：点采样/线性滤波
放大MAG_FILTER: gl.NEAREST（点采样）或gl.LINEAR(线性滤波)
缩小MIN_FILTER: gl.NEAREST（点采样）或gl.LINEAR(线性滤波)

3）mipmapping技术
当像素比对应的纹素大时，即映射缩小（MIN）时，
可以不必使用原纹素数组的分辨率显示该纹理，可以使用大分辨率的纹素数组
原因是WEBGL生成了一系列大小递减的层级纹理，可自动匹配。
0级是原始纹理分辨率（如32*32），1级分辨率是0级的一半（16*16）
2级是（8*8），3级（4*4），4级（2*2),5级（1*1）


4）多通道绘制


5）反射向量计算








